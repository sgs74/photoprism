name: DevSecOps
'on':
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch: null

jobs:

  Threat_Modelling:
    name: Threat-Modelling-Threatspec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Dep Check tool
        run: >-
          wget
          https://files.pythonhosted.org/packages/e8/c8/6bed036d120c1b594cf442f22e376429e080bd17e9ee696cfce343e64591/threatspec-0.5.0.tar.gz
      - name: Install the tool and run it
        run: gunzip -d threatspec-0.5.0.tar.gz
      - run: 'wget https://bootstrap.pypa.io/get-pip.py'
      - run: pip install threatspec
      - run: sudo apt-get install graphviz
      - run: threatspec init
      - run: threatspec run
      - run: threatspec report
      - run: mkdir downloads
            
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: threatspec-artifact
          path: ${{ github.workspace }}


  Lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: lint
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: ./Dockerfile
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Lint-artifact
          path: ${{ github.workspace }}

  Auto_Code_Review:
    name: Auto-Code-Review-DevSkim
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: microsoft/DevSkim-Action@v1
      - uses: github/codeql-action/upload-sarif@v1
        with:
         sarif_file: devskim-results.sarif
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DevSkim-artifact
          path: ${{ github.workspace }}

  Secrets_Scan:
    name: SecretsScan-GitGuardian
    runs-on: ubuntu-latest
    needs:
      - Auto_Code_Review
      - Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/gg-shield-action@master
        with:
          args: -v --all-policies --show-secrets 
        env:
          GITHUB_PUSH_BEFORE_SHA: '${{ github.event.before }}'
          GITHUB_PUSH_BASE_SHA: '${{ github.event.base }}'
          GITHUB_PULL_BASE_SHA: '${{ github.event.pull_request.base.sha }}'
          GITHUB_DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'
          GITGUARDIAN_API_KEY: '${{ secrets.GITGUARDIAN_API_KEY }}'

  Secrets_Scan_Gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: gitleaks-action
      uses: zricethezav/gitleaks-action@master

  Secrets_Scan_trufles:
    name: Trufflehog
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: trufflehog-actions-scan
      uses: edplato/trufflehog-actions-scan@master
       
  SAST-SonarCloud:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
        name: SonarCloud-artifact
        path: .${{ github.workspace }}   

  Software_Comp_Analysis_Debricked:
    name: Software-Comp-Analysis-Debricked
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: debricked/actions/scan@v1
        env:
          USERNAME: '${{ secrets.DEBRICKED_USERNAME }}'
          PASSWORD: '${{ secrets.DEBRICKED_PASSWORD }}'


  Software_Comp_Analysis_DepCheck:
    name: Software-Comp-Analysis-OWASPDEPCHECK
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download Dep Check tool
      run:  wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.2.2/dependency-check-6.2.2-release.zip
    - name: Install the tool and run it
      run: unzip dependency-check-6.2.2-release.zip && ls -l && dependency-check/bin/dependency-check.sh -s .
        
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
          name: depcheck-artifact
          path: ${{ github.workspace }}     
           
  SAST_Scan-NodeJs:
    runs-on: ubuntu-latest
    name: SAST-Nodejs
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
 

  SAST_Scan_SecurityCode:
    name: SAST-security-code-scan
    runs-on: ubuntu-latest
    steps:     
      - name: Checkout the code
        uses: actions/checkout@v2
      
      - name: Set up projects
        uses: security-code-scan/security-code-scan-add-action@v1.1
        
      - name: Convert sarif for uploading to GitHub
        uses: security-code-scan/security-code-scan-results-action@v1.3
          
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sast-artifact
          path: ${{ github.workspace }}

 
